CODE EXTRACTION REPORT
Generated: 2025-08-23 06:22:36
Root Directory: D:\qiportal-dev\qiportal-client
Ignored Directories: dist, node_modules
Ignored Files: package-lock.json
================================================================================

DIRECTORY TREE STRUCTURE:
----------------------------------------
├── functions
│   └── api
│       ├── _middleware.ts
│       └── me.ts
├── public
│   ├── favicon.ico
│   ├── logo.png
│   └── logo.svg
├── scripts
│   ├── code_extraction_2025-08-23_06-19-57.txt
│   ├── code_extractor.py
│   └── directory_mapper.py
├── src
│   ├── components
│   │   ├── DocLayout.jsx
│   │   ├── Header.jsx
│   │   ├── Hero.jsx
│   │   ├── ProtectedRoute.jsx
│   │   ├── SiteHeader.jsx
│   │   ├── ThemeProvider.jsx
│   │   └── ThemeToggle.jsx
│   ├── context
│   │   └── UserContext.jsx
│   ├── lib
│   │   └── api.js
│   ├── pages
│   │   ├── AdminPanel.jsx
│   │   ├── ClientDash.jsx
│   │   ├── Dashboard.jsx
│   │   ├── Home.jsx
│   │   ├── Logout.jsx
│   │   └── NotFound.jsx
│   ├── utils
│   │   └── auth.js
│   ├── App.jsx
│   ├── index.css
│   └── main.jsx
├── code_extraction_2025-08-23_06-22-36.txt
├── eslint.config.js
├── index.html
├── LICENSE
├── package-lock.json
├── package.json
├── postcss.config.js
├── README.md
├── tailwind.config.js
└── vite.config.js

================================================================================
STARTING FILE CONTENT EXTRACTION
================================================================================


================================================================================
FILE: D:\qiportal-dev\qiportal-client\code_extraction_2025-08-23_06-22-36.txt
TYPE: .txt
================================================================================



================================================================================
END OF FILE: D:\qiportal-dev\qiportal-client\code_extraction_2025-08-23_06-22-36.txt
================================================================================


================================================================================
FILE: D:\qiportal-dev\qiportal-client\eslint.config.js
TYPE: .js
================================================================================

import js from '@eslint/js'
import globals from 'globals'
import reactHooks from 'eslint-plugin-react-hooks'
import reactRefresh from 'eslint-plugin-react-refresh'
import { defineConfig, globalIgnores } from 'eslint/config'

export default defineConfig([
  globalIgnores(['dist']),
  {
    files: ['**/*.{js,jsx}'],
    extends: [
      js.configs.recommended,
      reactHooks.configs['recommended-latest'],
      reactRefresh.configs.vite,
    ],
    languageOptions: {
      ecmaVersion: 2020,
      globals: globals.browser,
      parserOptions: {
        ecmaVersion: 'latest',
        ecmaFeatures: { jsx: true },
        sourceType: 'module',
      },
    },
    rules: {
      'no-unused-vars': ['error', { varsIgnorePattern: '^[A-Z_]' }],
    },
  },
])


================================================================================
END OF FILE: D:\qiportal-dev\qiportal-client\eslint.config.js
================================================================================


================================================================================
FILE: D:\qiportal-dev\qiportal-client\index.html
TYPE: .html
================================================================================

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    
    <!-- Basic Meta -->
    <title>QiAlly — Empowering Systems That Breathe</title>
    <meta name="description" content="QiAlly™ helps you transform chaos into clarity with modular systems, client portals, and operational revival." />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta id="robots-meta" name="robots" content="noindex, nofollow" />
    <meta name="author" content="QiAlly" />

    <!-- Open Graph / Social -->
    <meta property="og:title" content="QiAlly™ | Systems That Breathe" />
    <meta property="og:description" content="The QiSuite™ Portal is live. Full website coming soon." />
    <meta id="og-image" property="og:image" content="https://portal.qially.com/logo.png" />
    <meta id="og-url" property="og:url" content="https://portal.qially.com/" />
    <meta name="twitter:card" content="summary_large_image" />

    <!-- Favicon -->
    <link rel="icon" href="/favicon.ico" type="image/x-icon" />
    <link rel="icon" type="image/svg+xml" href="/logo.svg" />
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
    
    <!-- Host-aware meta for SEO -->
    <script>
      const host = window.location.hostname;
      const robots = document.getElementById("robots-meta");
      const ogUrl = document.getElementById("og-url");
      const ogImg = document.getElementById("og-image");

      if (host === "qially.com" || host === "www.qially.com") {
        robots?.setAttribute("content", "index, follow");
        ogUrl?.setAttribute("content", "https://qially.com/");
        ogImg?.setAttribute("content", "https://qially.com/logo.png");
      } else {
        robots?.setAttribute("content", "noindex, nofollow");
        ogUrl?.setAttribute("content", "https://portal.qially.com/");
        ogImg?.setAttribute("content", "https://portal.qially.com/logo.png");
      }
    </script>
  </body>
</html>


================================================================================
END OF FILE: D:\qiportal-dev\qiportal-client\index.html
================================================================================


================================================================================
FILE: D:\qiportal-dev\qiportal-client\package.json
TYPE: .json
================================================================================

{
  "name": "qiportal-client",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "vite build && node -e \"require('fs').copyFileSync('dist/index.html','dist/404.html')\"",
    "lint": "eslint .",
    "preview": "vite preview"
  },
  "dependencies": {
    "@tailwindcss/aspect-ratio": "^0.4.2",
    "@tailwindcss/cli": "^4.1.12",
    "@tailwindcss/forms": "^0.5.10",
    "@tailwindcss/line-clamp": "^0.4.4",
    "@tailwindcss/typography": "^0.5.16",
    "react": "^19.1.1",
    "react-dom": "^19.1.1",
    "react-router-dom": "^7.8.2"
  },
  "devDependencies": {
    "@cloudflare/workers-types": "^4.20250823.0",
    "@eslint/js": "^9.33.0",
    "@types/react": "^19.1.10",
    "@types/react-dom": "^19.1.7",
    "@vitejs/plugin-react": "^5.0.0",
    "autoprefixer": "^10.4.21",
    "eslint": "^9.33.0",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.20",
    "globals": "^16.3.0",
    "postcss": "^8.5.6",
    "tailwindcss": "^3.4.17",
    "vite": "^7.1.2"
  }
}


================================================================================
END OF FILE: D:\qiportal-dev\qiportal-client\package.json
================================================================================


================================================================================
FILE: D:\qiportal-dev\qiportal-client\postcss.config.js
TYPE: .js
================================================================================

export default {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
}


================================================================================
END OF FILE: D:\qiportal-dev\qiportal-client\postcss.config.js
================================================================================


================================================================================
FILE: D:\qiportal-dev\qiportal-client\README.md
TYPE: .md
================================================================================

# QiAlly Portal 🌟

> **Systems That Breathe** — Transforming chaos into clarity through modular systems, client portals, and operational revival.

[![React](https://img.shields.io/badge/React-19.1.1-61dafb?logo=react&logoColor=white)](https://reactjs.org/)
[![Vite](https://img.shields.io/badge/Vite-7.1.2-646cff?logo=vite&logoColor=white)](https://vitejs.dev/)
[![TailwindCSS](https://img.shields.io/badge/Tailwind-3.4.17-38bdf8?logo=tailwindcss&logoColor=white)](https://tailwindcss.com/)
[![Cloudflare](https://img.shields.io/badge/Auth-Cloudflare%20Access-f38020?logo=cloudflare&logoColor=white)](https://developers.cloudflare.com/cloudflare-one/identity/users/)

## 🚀 Overview

QiAlly Portal is a modern client portal and business operations platform that helps small teams transform their operational chaos into streamlined, breathing systems. Built with React and powered by Cloudflare's secure infrastructure, it provides role-based access to business intelligence, project management, and operational tools.

### 🎯 Mission
**"Systems That Breathe"** — We believe business systems should be living, adaptive, and effortless to use. The QiAlly Portal embodies this philosophy by providing intuitive interfaces that grow with your business.

## ✨ Features

### 🏠 **Public Landing Page**
- **Modern Design**: Beautiful, responsive design with gradient effects and smooth animations
- **Service Showcase**: Comprehensive overview of consulting services and expertise
- **Case Studies**: Real-world success stories with quantified results
- **Client Testimonials**: Social proof from satisfied clients
- **Contact Integration**: Direct email integration for inquiries

### 🔐 **Secure Authentication**
- **Cloudflare Access Integration**: Enterprise-grade security without the complexity
- **JWT Token Management**: Secure session handling with automatic token validation
- **Role-Based Access**: Granular permissions for different user types

### 👥 **Role-Based Dashboards**

#### **Client Dashboard**
- **Project Overview**: Active projects, pending tasks, and completion metrics
- **Real-time Activity Feed**: Recent updates and milestones
- **Performance Metrics**: Visual KPIs and progress tracking
- **Secure Document Access**: Protected file sharing and collaboration

#### **Admin Panel**
- **System Monitoring**: User activity, session management, and system health
- **User Management**: Role assignments and access control
- **Analytics Dashboard**: Business intelligence and reporting tools
- **Quick Actions**: Streamlined administrative tasks

### 🎨 **User Experience**
- **Dark/Light Theme Toggle**: Personalized viewing preferences
- **Responsive Design**: Seamless experience across all devices
- **Glass Morphism UI**: Modern, clean interface with depth and clarity
- **Smooth Animations**: Engaging micro-interactions and transitions

## 🛠 Tech Stack

### **Frontend**
- **React 19.1.1** - Latest React with concurrent features
- **React Router 7.8.2** - Modern client-side routing
- **Vite 7.1.2** - Lightning-fast build tool and dev server
- **TailwindCSS 3.4.17** - Utility-first CSS framework

### **Authentication & Security**
- **Cloudflare Access** - Zero Trust security model
- **JWT Tokens** - Stateless authentication
- **Protected Routes** - Role-based access control

### **Development Tools**
- **ESLint** - Code quality and consistency
- **PostCSS** - CSS processing and optimization
- **Autoprefixer** - Cross-browser compatibility

## 🏗 Architecture

```
qiportal-client/
├── src/
│   ├── components/          # Reusable UI components
│   │   ├── ProtectedRoute.jsx   # Auth guard component
│   │   ├── ThemeProvider.jsx    # Theme management
│   │   └── ...
│   ├── pages/              # Route components
│   │   ├── Home.jsx            # Landing page
│   │   ├── Dashboard.jsx       # Client dashboard
│   │   ├── AdminPanel.jsx      # Admin interface
│   │   └── ...
│   ├── context/            # React context providers
│   │   └── UserContext.jsx     # User state management
│   ├── utils/              # Utility functions
│   │   └── auth.js             # Authentication helpers
│   └── lib/                # API and external integrations
├── functions/              # Cloudflare Functions
│   ├── api/                # API endpoints
│   └── _middleware.ts      # Request middleware
├── public/                 # Static assets
└── scripts/                # Development utilities
```

## 🚦 Getting Started

### Prerequisites
- **Node.js** (v18 or higher)
- **npm** or **yarn**
- **Cloudflare account** (for authentication)

### Installation

1. **Clone the repository**
   ```bash
   git clone https://github.com/your-org/qiportal-client.git
   cd qiportal-client
   ```

2. **Install dependencies**
   ```bash
   npm install
   ```

3. **Start development server**
   ```bash
   npm run dev
   ```

4. **Open your browser**
   Navigate to `http://localhost:5173`

### Available Scripts

```bash
npm run dev      # Start development server
npm run build    # Build for production
npm run preview  # Preview production build
npm run lint     # Run ESLint
```

## 🌐 Deployment

This application is optimized for deployment on **Cloudflare Pages** with seamless integration to Cloudflare Access for authentication.

### Cloudflare Pages Deployment
1. Connect your GitHub repository to Cloudflare Pages
2. Set build command: `npm run build`
3. Set output directory: `dist`
4. Configure Cloudflare Access for authentication

## 🎨 Design System

### **Color Palette**
- **Primary**: Blue to Purple gradient (`from-blue-500 to-purple-500`)
- **Secondary**: Cyan accents (`cyan-500`)
- **Neutral**: Gray scale with proper contrast ratios
- **Glass Effects**: Subtle transparency with backdrop blur

### **Typography**
- **Headings**: Bold, gradient text effects
- **Body**: Clean, readable sans-serif
- **Interactive**: Hover states and transitions

### **Components**
- **Buttons**: Multiple variants (primary, ghost, outlined)
- **Cards**: Glass morphism with subtle shadows
- **Forms**: Consistent styling with validation states

## 📊 Business Impact

### **Proven Results**
- **500+** Clients & Partners served
- **20+** Years of combined experience
- **80+** Solutions & Processes implemented
- **40%** Average process time reduction
- **60%** Onboarding efficiency improvement
- **$250K+** Annual savings uncovered through optimization

### **Services Offered**
- **Management & Operations** - Streamline daily operations
- **Process Improvement** - Optimize workflows and eliminate waste
- **HR & Workforce Optimization** - Enhance team productivity
- **Financial Acumen** - Improve financial processes and reporting
- **Technology & Systems Integration** - Connect and automate systems

## 🤝 Contributing

We welcome contributions! Please see our contributing guidelines for details on how to submit pull requests, report issues, and suggest improvements.

## 📄 License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## 📞 Contact

**QiAlly Team**
- **Email**: [info@qially.me](mailto:info@qially.me)
- **Website**: [https://portal.qially.com](https://portal.qially.com)

---

<div align="center">
  <strong>Built with ❤️ by the QiAlly Team</strong><br>
  <em>Creating systems that breathe, one client at a time.</em>
</div>


================================================================================
END OF FILE: D:\qiportal-dev\qiportal-client\README.md
================================================================================


================================================================================
FILE: D:\qiportal-dev\qiportal-client\tailwind.config.js
TYPE: .js
================================================================================

/** @type {import('tailwindcss').Config} */
export default {
  darkMode: ["class", '[data-theme="dark"]'],
  content: ["./index.html", "./src/**/*.{js,jsx,ts,tsx}"],
  theme: {
    container: { center: true, padding: "1rem" },
    extend: {
      fontFamily: {
        display: ["Inter", "ui-sans-serif", "system-ui", "sans-serif"],
        sans: ["Inter", "ui-sans-serif", "system-ui", "sans-serif"],
      },
      colors: {
        // semantic tokens (mapped to CSS vars below)
        bg: "rgb(var(--bg) / <alpha-value>)",
        panel: "rgb(var(--panel) / <alpha-value>)",
        text: "rgb(var(--text) / <alpha-value>)",
        subtext: "rgb(var(--subtext) / <alpha-value>)",
        ring: "rgb(var(--ring) / <alpha-value>)",
        primary: {
          DEFAULT: "rgb(var(--primary) / <alpha-value>)",
          50:  "#eaf7ff",
          100: "#d6efff",
          200: "#aee0ff",
          300: "#76caff",
          400: "#41b2ff",
          500: "#1898ff",    // link/accent
          600: "#0f7ae6",
          700: "#0e62bf",
          800: "#0f4f98",
          900: "#123f78",
        },
        accent: {
          DEFAULT: "rgb(var(--accent) / <alpha-value>)", // teal glow
        },
      },
      boxShadow: {
        soft: "0 10px 30px rgba(0,0,0,.15)",
        glass: "0 1px 0 rgba(255,255,255,.06) inset, 0 8px 30px rgba(0,0,0,.35)",
      },
      borderRadius: {
        xl2: "1rem",
      },
      backgroundImage: {
        "glow-radial":
          "radial-gradient(60% 60% at 50% 0%, rgba(56,189,248,.25), transparent 60%)",
        "hero-gradient":
          "linear-gradient(180deg, rgba(8,19,39,1) 0%, rgba(9,12,22,1) 60%, rgba(7,10,18,1) 100%)",
        "text-gradient":
          "linear-gradient(90deg, #60a5fa 0%, #22d3ee 50%, #a78bfa 100%)",
      },
      backdropBlur: { xs: "2px" },
    },
  },
  plugins: [
    require("@tailwindcss/typography"),
    require("@tailwindcss/forms"),
    require("@tailwindcss/aspect-ratio"),
  ],
}


================================================================================
END OF FILE: D:\qiportal-dev\qiportal-client\tailwind.config.js
================================================================================


================================================================================
FILE: D:\qiportal-dev\qiportal-client\vite.config.js
TYPE: .js
================================================================================

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vite.dev/config/
export default defineConfig({
  base: '/',
  plugins: [react()],
})


================================================================================
END OF FILE: D:\qiportal-dev\qiportal-client\vite.config.js
================================================================================


================================================================================
FILE: D:\qiportal-dev\qiportal-client\functions\api\_middleware.ts
TYPE: .ts
================================================================================

export const onRequest = async ({ request, next }: any) => {
  const email = request.headers.get("Cf-Access-Authenticated-User-Email");
  if (!email) return new Response("Unauthorized", { status: 401 });
  return next();
};


================================================================================
END OF FILE: D:\qiportal-dev\qiportal-client\functions\api\_middleware.ts
================================================================================


================================================================================
FILE: D:\qiportal-dev\qiportal-client\functions\api\me.ts
TYPE: .ts
================================================================================

export const onRequestGet = async ({ request }: any) => {
  const email = request.headers.get("Cf-Access-Authenticated-User-Email");
  if (!email) return new Response("Unauthorized", { status: 401 });
  return Response.json({ email });
};
  

================================================================================
END OF FILE: D:\qiportal-dev\qiportal-client\functions\api\me.ts
================================================================================


================================================================================
FILE: D:\qiportal-dev\qiportal-client\scripts\code_extraction_2025-08-23_06-19-57.txt
TYPE: .txt
================================================================================

CODE EXTRACTION REPORT
Generated: 2025-08-23 06:19:57
Root Directory: D:\qiportal-dev\qiportal-client\scripts
Ignored Directories: dist, node_modules
Ignored Files: package-lock.json
================================================================================

DIRECTORY TREE STRUCTURE:
----------------------------------------
├── code_extraction_2025-08-23_06-19-57.txt
├── code_extractor.py
└── directory_mapper.py

================================================================================
STARTING FILE CONTENT EXTRACTION
================================================================================


================================================================================
FILE: D:\qiportal-dev\qiportal-client\scripts\code_extraction_2025-08-23_06-19-57.txt
TYPE: .txt
================================================================================



================================================================================
END OF FILE: D:\qiportal-dev\qiportal-client\scripts\code_extraction_2025-08-23_06-19-57.txt
================================================================================


================================================================================
FILE: D:\qiportal-dev\qiportal-client\scripts\code_extractor.py
TYPE: .py
================================================================================

import os
from datetime import datetime

def should_ignore_directory(dir_name):
    """Check if directory should be ignored."""
    ignore_dirs = ['dist', 'node_modules']
    return dir_name.lower() in [d.lower() for d in ignore_dirs]

def get_file_extension(file_name):
    """Get file extension for determining if it's a code file."""
    return os.path.splitext(file_name)[1].lower()

def is_code_file(file_name):
    """Check if file is likely a code file based on extension."""
    # Files to explicitly ignore
    ignore_files = ['package-lock.json']
    if file_name in ignore_files:
        return False
    
    code_extensions = {
        '.py', '.js', '.jsx', '.ts', '.tsx', '.html', '.css', '.scss', '.sass',
        '.json', '.xml', '.yaml', '.yml', '.md', '.txt', '.sh', '.bat', '.ps1',
        '.vue', '.php', '.java', '.cpp', '.c', '.h', '.hpp', '.cs', '.rb',
        '.go', '.rs', '.swift', '.kt', '.scala', '.r', '.sql', '.pl', '.lua',
        '.config.js'  # Include config.js files
    }
    
    # Check for exact extension match
    if get_file_extension(file_name) in code_extensions:
        return True
    
    # Special check for .config.js files
    if file_name.endswith('.config.js'):
        return True
    
    return False

def print_directory_tree(root_dir, output_file, current_depth=0, prefix=''):
    """Recursively prints the directory tree structure and writes to output file."""
    
    try:
        # Get the list of items in the directory
        items = os.listdir(root_dir)
    except PermissionError:
        message = prefix + "└── [Permission Denied]"
        print(message)
        output_file.write(message + "\n")
        return
    except FileNotFoundError:
        message = prefix + "└── [Directory Not Found]"
        print(message)
        output_file.write(message + "\n")
        return

    # Sort items: directories first, then files
    items = sorted(items, key=lambda s: s.lower())
    directories = [item for item in items if os.path.isdir(os.path.join(root_dir, item))]
    files = [item for item in items if not os.path.isdir(os.path.join(root_dir, item))]

    # Filter out ignored directories and hidden files/directories
    directories = [item for item in directories if not should_ignore_directory(item) and not item.startswith('.')]
    files = [item for item in files if not item.startswith('.')]

    # Combine directories and files
    items = directories + files

    for index, item in enumerate(items):
        path = os.path.join(root_dir, item)
        
        # Determine tree connector style
        if index == len(items) - 1:
            connector = '└── '
            extension = '    '
        else:
            connector = '├── '
            extension = '│   '

        # Print and write to file
        message = prefix + connector + item
        print(message)
        output_file.write(message + "\n")

        # Recurse into directories (excluding ignored ones)
        if os.path.isdir(path):
            print_directory_tree(path, output_file, current_depth + 1, prefix + extension)

def extract_file_content(file_path, output_file):
    """Extract and write file content with header."""
    try:
        # Create header
        header = f"\n{'='*80}\n"
        header += f"FILE: {file_path}\n"
        header += f"TYPE: {get_file_extension(file_path)}\n"
        header += f"{'='*80}\n\n"
        
        print(header)
        output_file.write(header)
        
        # Read and write file content
        with open(file_path, 'r', encoding='utf-8', errors='ignore') as f:
            content = f.read()
            print(content)
            output_file.write(content)
            
        # Add footer
        footer = f"\n\n{'='*80}\nEND OF FILE: {file_path}\n{'='*80}\n\n"
        print(footer)
        output_file.write(footer)
        
    except Exception as e:
        error_msg = f"\nERROR READING FILE {file_path}: {str(e)}\n"
        print(error_msg)
        output_file.write(error_msg)

def scan_and_extract_files(root_dir, output_file):
    """Scan directory tree and extract content from all code files."""
    print(f"\n{'='*80}")
    print("STARTING FILE CONTENT EXTRACTION")
    print(f"{'='*80}\n")
    output_file.write(f"\n{'='*80}\n")
    output_file.write("STARTING FILE CONTENT EXTRACTION\n")
    output_file.write(f"{'='*80}\n\n")
    
    file_count = 0
    
    for root, dirs, files in os.walk(root_dir):
        # Filter out ignored directories from traversal
        dirs[:] = [d for d in dirs if not should_ignore_directory(d) and not d.startswith('.')]
        
        # Filter out hidden files and sort for consistent order
        files = [f for f in files if not f.startswith('.')]
        files = sorted(files, key=lambda s: s.lower())
        
        for file_name in files:
            file_path = os.path.join(root, file_name)
            
            # Only process code files
            if is_code_file(file_name):
                extract_file_content(file_path, output_file)
                file_count += 1
    
    return file_count

def main():
    """Main function to run the code extraction."""
    # Get the project root (current working directory)
    root_dir = os.getcwd()
    
    # Create output file in root directory
    timestamp = datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
    output_filename = f"code_extraction_{timestamp}.txt"
    output_path = os.path.join(root_dir, output_filename)
    
    print(f"Starting code extraction from: {root_dir}")
    print(f"Output will be saved to: {output_path}")
    print(f"Ignoring directories: dist, node_modules")
    print(f"Ignoring files: package-lock.json")
    print(f"{'='*80}\n")
    
    with open(output_path, 'w', encoding='utf-8') as output_file:
        # Write header information
        header_info = f"CODE EXTRACTION REPORT\n"
        header_info += f"Generated: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n"
        header_info += f"Root Directory: {root_dir}\n"
        header_info += f"Ignored Directories: dist, node_modules\n"
        header_info += f"Ignored Files: package-lock.json\n"
        header_info += f"{'='*80}\n\n"
        
        print(header_info)
        output_file.write(header_info)
        
        # Print directory tree
        print("DIRECTORY TREE STRUCTURE:")
        print("-" * 40)
        output_file.write("DIRECTORY TREE STRUCTURE:\n")
        output_file.write("-" * 40 + "\n")
        
        print_directory_tree(root_dir, output_file)
        
        # Extract file contents
        file_count = scan_and_extract_files(root_dir, output_file)
        
        # Write footer
        footer = f"\n{'='*80}\n"
        footer += f"EXTRACTION COMPLETE\n"
        footer += f"Total files processed: {file_count}\n"
        footer += f"Output saved to: {output_path}\n"
        footer += f"{'='*80}\n"
        
        print(footer)
        output_file.write(footer)
    
    print(f"\nCode extraction completed successfully!")
    print(f"Output saved to: {output_path}")

if __name__ == "__main__":
    main()


================================================================================
END OF FILE: D:\qiportal-dev\qiportal-client\scripts\code_extractor.py
================================================================================


================================================================================
FILE: D:\qiportal-dev\qiportal-client\scripts\directory_mapper.py
TYPE: .py
================================================================================

import os
import argparse
from datetime import datetime

def print_directory_tree(root_dir, show_files=True, max_depth=None, current_depth=0, prefix='', log_file=None, include_hidden=True, exclude_dirs=None):
    """
    Recursively prints the directory tree structure up to the specified depth and writes to a log file.
    """
    if exclude_dirs is None:
        exclude_dirs = [
            'venv', '__pycache__', 'data', 'logs',
            '.git', '.vscode', '.idea', '.pytest_cache',
            '.venv', '.DS_Store', '.env', '.env.local',
            '.env.development.local', '.env.test.local',
            '.env.production.local', 'Empty_Folders',
            '.docusaurus', '.docusaurus-plugin-content-docs-current',
            # Node / frontend bloat
            'node_modules', '.node_modules',
            # Tools/programs we don't want
            'mpc-hc', 'losslesscut', 'OCR', 'pdf-main', 'my-pdf-main',
            # Tests (ignore any folder containing these patterns)
            'test', 'tests', '__tests__',
            # Plugins and cache
            'plugins', '.local'
        ]

    if max_depth is not None and current_depth >= max_depth:
        return

    try:
        # Get the list of items in the directory
        items = os.listdir(root_dir)
    except PermissionError:
        message = prefix + "└── [Permission Denied]"
        print(message)
        if log_file:
            log_file.write(message + "\n")
        return
    except FileNotFoundError:
        message = prefix + "└── [Directory Not Found]"
        print(message)
        if log_file:
            log_file.write(message + "\n")
        return

    # Sort items: directories first, then files
    items = sorted(items, key=lambda s: s.lower())
    directories = [item for item in items if os.path.isdir(os.path.join(root_dir, item))]
    files = [item for item in items if not os.path.isdir(os.path.join(root_dir, item))]

    # Exclude directories that match or contain any exclude pattern
    directories = [
        item for item in directories
        if not any(ex.lower() in item.lower() for ex in exclude_dirs)
    ]

    # Show files or just folders
    items = directories if not show_files else directories + files

    for index, item in enumerate(items):
        if not include_hidden and item.startswith('.'):
            continue

        path = os.path.join(root_dir, item)
        # Determine tree connector style
        if index == len(items) - 1:
            connector = '└── '
            extension = '    '
        else:
            connector = '├── '
            extension = '│   '

        # Print and log
        message = prefix + connector + item
        print(message)
        if log_file:
            log_file.write(message + "\n")

        # Recurse into directories
        if os.path.isdir(path):
            print_directory_tree(path, show_files, max_depth, current_depth + 1,
                                 prefix + extension, log_file, include_hidden, exclude_dirs)

def create_log_file(filename_prefix, suffix=""):
    """Creates a timestamped log file in Downloads."""
    downloads_dir = os.path.join(os.path.expanduser("~"), "Downloads")

    sanitized_prefix = "".join(c for c in filename_prefix if c.isalnum() or c in (' ', '_', '-')).strip()
    if not sanitized_prefix:
        sanitized_prefix = "log"

    timestamp = datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
    base_log_file_name = f"{sanitized_prefix}_{timestamp}{suffix}"
    log_file_name = f"{base_log_file_name}.txt"
    log_file_path = os.path.join(downloads_dir, log_file_name)

    counter = 1
    while os.path.exists(log_file_path):
        log_file_name = f"{base_log_file_name}_{counter}.txt"
        log_file_path = os.path.join(downloads_dir, log_file_name)
        counter += 1

    return open(log_file_path, "w", encoding="utf-8")

def main():
    """Main orchestrator for generating directory tree."""
    try:
        # Set default path to project root (current working directory)
        root_dir = os.getcwd()
        
        # Default settings: show both files and folders, no depth limit
        show_files = True
        max_depth = None

        log_file_tree = create_log_file(os.path.basename(root_dir), "_tree")
        print(f"Log file created: {log_file_tree.name}")
        print(f"Resolved path: {root_dir}")
        log_file_tree.write(f"Resolved path: {root_dir}\n")

        print_directory_tree(root_dir, show_files, max_depth, log_file=log_file_tree)
        log_file_tree.close()
        print(f"Directory structure logged in: {log_file_tree.name}")

    except Exception as e:
        print(f"An unexpected error occurred in main: {e}")

if __name__ == "__main__":
    main()


================================================================================
END OF FILE: D:\qiportal-dev\qiportal-client\scripts\directory_mapper.py
================================================================================


================================================================================
EXTRACTION COMPLETE
Total files processed: 3
Output saved to: D:\qiportal-dev\qiportal-client\scripts\code_extraction_2025-08-23_06-19-57.txt
================================================================================


================================================================================
END OF FILE: D:\qiportal-dev\qiportal-client\scripts\code_extraction_2025-08-23_06-19-57.txt
================================================================================


================================================================================
FILE: D:\qiportal-dev\qiportal-client\scripts\code_extractor.py
TYPE: .py
================================================================================

import os
from datetime import datetime

def should_ignore_directory(dir_name):
    """Check if directory should be ignored."""
    ignore_dirs = ['dist', 'node_modules']
    return dir_name.lower() in [d.lower() for d in ignore_dirs]

def get_file_extension(file_name):
    """Get file extension for determining if it's a code file."""
    return os.path.splitext(file_name)[1].lower()

def is_code_file(file_name):
    """Check if file is likely a code file based on extension."""
    # Files to explicitly ignore
    ignore_files = ['package-lock.json']
    if file_name in ignore_files:
        return False
    
    code_extensions = {
        '.py', '.js', '.jsx', '.ts', '.tsx', '.html', '.css', '.scss', '.sass',
        '.json', '.xml', '.yaml', '.yml', '.md', '.txt', '.sh', '.bat', '.ps1',
        '.vue', '.php', '.java', '.cpp', '.c', '.h', '.hpp', '.cs', '.rb',
        '.go', '.rs', '.swift', '.kt', '.scala', '.r', '.sql', '.pl', '.lua',
        '.config.js'  # Include config.js files
    }
    
    # Check for exact extension match
    if get_file_extension(file_name) in code_extensions:
        return True
    
    # Special check for .config.js files
    if file_name.endswith('.config.js'):
        return True
    
    return False

def print_directory_tree(root_dir, output_file, current_depth=0, prefix=''):
    """Recursively prints the directory tree structure and writes to output file."""
    
    try:
        # Get the list of items in the directory
        items = os.listdir(root_dir)
    except PermissionError:
        message = prefix + "└── [Permission Denied]"
        print(message)
        output_file.write(message + "\n")
        return
    except FileNotFoundError:
        message = prefix + "└── [Directory Not Found]"
        print(message)
        output_file.write(message + "\n")
        return

    # Sort items: directories first, then files
    items = sorted(items, key=lambda s: s.lower())
    directories = [item for item in items if os.path.isdir(os.path.join(root_dir, item))]
    files = [item for item in items if not os.path.isdir(os.path.join(root_dir, item))]

    # Filter out ignored directories and hidden files/directories
    directories = [item for item in directories if not should_ignore_directory(item) and not item.startswith('.')]
    files = [item for item in files if not item.startswith('.')]

    # Combine directories and files
    items = directories + files

    for index, item in enumerate(items):
        path = os.path.join(root_dir, item)
        
        # Determine tree connector style
        if index == len(items) - 1:
            connector = '└── '
            extension = '    '
        else:
            connector = '├── '
            extension = '│   '

        # Print and write to file
        message = prefix + connector + item
        print(message)
        output_file.write(message + "\n")

        # Recurse into directories (excluding ignored ones)
        if os.path.isdir(path):
            print_directory_tree(path, output_file, current_depth + 1, prefix + extension)

def extract_file_content(file_path, output_file):
    """Extract and write file content with header."""
    try:
        # Create header
        header = f"\n{'='*80}\n"
        header += f"FILE: {file_path}\n"
        header += f"TYPE: {get_file_extension(file_path)}\n"
        header += f"{'='*80}\n\n"
        
        print(header)
        output_file.write(header)
        
        # Read and write file content
        with open(file_path, 'r', encoding='utf-8', errors='ignore') as f:
            content = f.read()
            print(content)
            output_file.write(content)
            
        # Add footer
        footer = f"\n\n{'='*80}\nEND OF FILE: {file_path}\n{'='*80}\n\n"
        print(footer)
        output_file.write(footer)
        
    except Exception as e:
        error_msg = f"\nERROR READING FILE {file_path}: {str(e)}\n"
        print(error_msg)
        output_file.write(error_msg)

def scan_and_extract_files(root_dir, output_file):
    """Scan directory tree and extract content from all code files."""
    print(f"\n{'='*80}")
    print("STARTING FILE CONTENT EXTRACTION")
    print(f"{'='*80}\n")
    output_file.write(f"\n{'='*80}\n")
    output_file.write("STARTING FILE CONTENT EXTRACTION\n")
    output_file.write(f"{'='*80}\n\n")
    
    file_count = 0
    
    for root, dirs, files in os.walk(root_dir):
        # Filter out ignored directories from traversal
        dirs[:] = [d for d in dirs if not should_ignore_directory(d) and not d.startswith('.')]
        
        # Filter out hidden files and sort for consistent order
        files = [f for f in files if not f.startswith('.')]
        files = sorted(files, key=lambda s: s.lower())
        
        for file_name in files:
            file_path = os.path.join(root, file_name)
            
            # Only process code files
            if is_code_file(file_name):
                extract_file_content(file_path, output_file)
                file_count += 1
    
    return file_count

def main():
    """Main function to run the code extraction."""
    # Get the project root (current working directory)
    root_dir = os.getcwd()
    
    # Create output file in root directory
    timestamp = datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
    output_filename = f"code_extraction_{timestamp}.txt"
    output_path = os.path.join(root_dir, output_filename)
    
    print(f"Starting code extraction from: {root_dir}")
    print(f"Output will be saved to: {output_path}")
    print(f"Ignoring directories: dist, node_modules")
    print(f"Ignoring files: package-lock.json")
    print(f"{'='*80}\n")
    
    with open(output_path, 'w', encoding='utf-8') as output_file:
        # Write header information
        header_info = f"CODE EXTRACTION REPORT\n"
        header_info += f"Generated: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n"
        header_info += f"Root Directory: {root_dir}\n"
        header_info += f"Ignored Directories: dist, node_modules\n"
        header_info += f"Ignored Files: package-lock.json\n"
        header_info += f"{'='*80}\n\n"
        
        print(header_info)
        output_file.write(header_info)
        
        # Print directory tree
        print("DIRECTORY TREE STRUCTURE:")
        print("-" * 40)
        output_file.write("DIRECTORY TREE STRUCTURE:\n")
        output_file.write("-" * 40 + "\n")
        
        print_directory_tree(root_dir, output_file)
        
        # Extract file contents
        file_count = scan_and_extract_files(root_dir, output_file)
        
        # Write footer
        footer = f"\n{'='*80}\n"
        footer += f"EXTRACTION COMPLETE\n"
        footer += f"Total files processed: {file_count}\n"
        footer += f"Output saved to: {output_path}\n"
        footer += f"{'='*80}\n"
        
        print(footer)
        output_file.write(footer)
    
    print(f"\nCode extraction completed successfully!")
    print(f"Output saved to: {output_path}")

if __name__ == "__main__":
    main()


================================================================================
END OF FILE: D:\qiportal-dev\qiportal-client\scripts\code_extractor.py
================================================================================


================================================================================
FILE: D:\qiportal-dev\qiportal-client\scripts\directory_mapper.py
TYPE: .py
================================================================================

import os
import argparse
from datetime import datetime

def print_directory_tree(root_dir, show_files=True, max_depth=None, current_depth=0, prefix='', log_file=None, include_hidden=True, exclude_dirs=None):
    """
    Recursively prints the directory tree structure up to the specified depth and writes to a log file.
    """
    if exclude_dirs is None:
        exclude_dirs = [
            'venv', '__pycache__', 'data', 'logs',
            '.git', '.vscode', '.idea', '.pytest_cache',
            '.venv', '.DS_Store', '.env', '.env.local',
            '.env.development.local', '.env.test.local',
            '.env.production.local', 'Empty_Folders',
            '.docusaurus', '.docusaurus-plugin-content-docs-current',
            # Node / frontend bloat
            'node_modules', '.node_modules',
            # Tools/programs we don't want
            'mpc-hc', 'losslesscut', 'OCR', 'pdf-main', 'my-pdf-main',
            # Tests (ignore any folder containing these patterns)
            'test', 'tests', '__tests__',
            # Plugins and cache
            'plugins', '.local'
        ]

    if max_depth is not None and current_depth >= max_depth:
        return

    try:
        # Get the list of items in the directory
        items = os.listdir(root_dir)
    except PermissionError:
        message = prefix + "└── [Permission Denied]"
        print(message)
        if log_file:
            log_file.write(message + "\n")
        return
    except FileNotFoundError:
        message = prefix + "└── [Directory Not Found]"
        print(message)
        if log_file:
            log_file.write(message + "\n")
        return

    # Sort items: directories first, then files
    items = sorted(items, key=lambda s: s.lower())
    directories = [item for item in items if os.path.isdir(os.path.join(root_dir, item))]
    files = [item for item in items if not os.path.isdir(os.path.join(root_dir, item))]

    # Exclude directories that match or contain any exclude pattern
    directories = [
        item for item in directories
        if not any(ex.lower() in item.lower() for ex in exclude_dirs)
    ]

    # Show files or just folders
    items = directories if not show_files else directories + files

    for index, item in enumerate(items):
        if not include_hidden and item.startswith('.'):
            continue

        path = os.path.join(root_dir, item)
        # Determine tree connector style
        if index == len(items) - 1:
            connector = '└── '
            extension = '    '
        else:
            connector = '├── '
            extension = '│   '

        # Print and log
        message = prefix + connector + item
        print(message)
        if log_file:
            log_file.write(message + "\n")

        # Recurse into directories
        if os.path.isdir(path):
            print_directory_tree(path, show_files, max_depth, current_depth + 1,
                                 prefix + extension, log_file, include_hidden, exclude_dirs)

def create_log_file(filename_prefix, suffix=""):
    """Creates a timestamped log file in Downloads."""
    downloads_dir = os.path.join(os.path.expanduser("~"), "Downloads")

    sanitized_prefix = "".join(c for c in filename_prefix if c.isalnum() or c in (' ', '_', '-')).strip()
    if not sanitized_prefix:
        sanitized_prefix = "log"

    timestamp = datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
    base_log_file_name = f"{sanitized_prefix}_{timestamp}{suffix}"
    log_file_name = f"{base_log_file_name}.txt"
    log_file_path = os.path.join(downloads_dir, log_file_name)

    counter = 1
    while os.path.exists(log_file_path):
        log_file_name = f"{base_log_file_name}_{counter}.txt"
        log_file_path = os.path.join(downloads_dir, log_file_name)
        counter += 1

    return open(log_file_path, "w", encoding="utf-8")

def main():
    """Main orchestrator for generating directory tree."""
    try:
        # Set default path to project root (current working directory)
        root_dir = os.getcwd()
        
        # Default settings: show both files and folders, no depth limit
        show_files = True
        max_depth = None

        log_file_tree = create_log_file(os.path.basename(root_dir), "_tree")
        print(f"Log file created: {log_file_tree.name}")
        print(f"Resolved path: {root_dir}")
        log_file_tree.write(f"Resolved path: {root_dir}\n")

        print_directory_tree(root_dir, show_files, max_depth, log_file=log_file_tree)
        log_file_tree.close()
        print(f"Directory structure logged in: {log_file_tree.name}")

    except Exception as e:
        print(f"An unexpected error occurred in main: {e}")

if __name__ == "__main__":
    main()


================================================================================
END OF FILE: D:\qiportal-dev\qiportal-client\scripts\directory_mapper.py
================================================================================


================================================================================
FILE: D:\qiportal-dev\qiportal-client\src\App.jsx
TYPE: .jsx
================================================================================

import { Routes, Route, Link, Navigate } from 'react-router-dom';
import Home from './pages/Home.jsx';
import Logout from './pages/Logout.jsx';
import NotFound from './pages/NotFound.jsx';
import Dashboard from './pages/Dashboard.jsx';
import AdminPanel from './pages/AdminPanel.jsx';
import ProtectedRoute from './components/ProtectedRoute.jsx';

export default function App() {
  // Host-aware behavior:
  // - On portal.qially.com the home page should just be the dashboard (/client).
  // - Anywhere else (e.g. a preview), keep Home and use an absolute link to the portal.
  const host =
    typeof window !== 'undefined' ? window.location.hostname : '';
  const isPortal =
    host === 'portal.qially.com' || host.startsWith('portal.');

  const loginHref = isPortal
    ? '/client'
    : 'https://portal.qially.com/client';

  return (
    <div className="min-h-screen flex flex-col">
      {/* Simple header */}
      <header className="container py-4 flex items-center justify-between">
        <Link to={isPortal ? '/client' : '/'} className="flex items-center gap-2 font-semibold">
          <img src="/logo.svg" alt="QiAlly Logo" className="w-8 h-8" />
          QiAlly
        </Link>
        <nav className="hidden md:flex items-center gap-6 text-sm">
          <a href="#what-we-offer">Services</a>
          <a href="#outcomes">Outcomes</a>
          <a href="#contact">Contact</a>
          <a className="btn btn-ghost" href={loginHref}>Login</a>
        </nav>
      </header>

      <main className="flex-1 overflow-auto">
        <Routes>
          {/* On the portal host, shove / to /client. Else show Home. */}
          <Route path="/" element={isPortal ? <Navigate to="/client" replace /> : <Home />} />



          <Route path="/logout" element={<Logout />} />

          <Route
            path="/client"
            element={
              <ProtectedRoute roleRequired="client">
                <Dashboard />
              </ProtectedRoute>
            }
          />

          <Route
            path="/admin"
            element={
              <ProtectedRoute roleRequired="admin">
                <AdminPanel />
              </ProtectedRoute>
            }
          />

          <Route path="*" element={<NotFound />} />
        </Routes>
      </main>

      <footer className="container py-10 text-subtext">
        © {new Date().getFullYear()} QiAlly. No tracking. No drama.
      </footer>
    </div>
  );
}


================================================================================
END OF FILE: D:\qiportal-dev\qiportal-client\src\App.jsx
================================================================================


================================================================================
FILE: D:\qiportal-dev\qiportal-client\src\index.css
TYPE: .css
================================================================================

@tailwind base;
@tailwind components;
@tailwind utilities;

/* CSS Variables for theming */
:root {
  --bg: 255 255 255;
  --panel: 248 250 252;
  --text: 15 23 42;
  --subtext: 100 116 139;
  --ring: 226 232 240;
  --primary: 59 130 246;
  --accent: 147 51 234;
}

[data-theme="dark"] {
  --bg: 15 23 42;
  --panel: 30 41 59;
  --text: 248 250 252;
  --subtext: 148 163 184;
  --ring: 51 65 85;
  --primary: 59 130 246;
  --accent: 147 51 234;
}

/* Base styles */
html, body {
  @apply min-h-screen;
  background-color: rgb(var(--bg));
  color: rgb(var(--text));
  font-family: 'Inter', ui-sans-serif, system-ui, sans-serif;
}

/* Custom scrollbar */
::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background-color: rgb(var(--panel));
}

::-webkit-scrollbar-thumb {
  @apply rounded-full;
  background-color: rgb(var(--subtext) / 0.3);
}

::-webkit-scrollbar-thumb:hover {
  background-color: rgb(var(--subtext) / 0.5);
}

/* Glassmorphism utilities */
.glass {
  background-color: rgb(var(--panel) / 0.8);
  backdrop-filter: blur(24px);
  border: 1px solid rgb(var(--ring) / 0.5);
  box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
}

/* Button utilities */
.btn {
  @apply inline-flex items-center justify-center rounded-xl2 px-4 py-2 text-sm font-medium transition-all duration-200;
  background-color: rgb(var(--panel));
  color: rgb(var(--text));
  border: 1px solid rgb(var(--ring));
}

.btn:hover {
  background-color: rgb(var(--panel) / 0.8);
  border-color: rgb(var(--ring) / 0.8);
}

.btn-primary {
  background-color: rgb(var(--primary));
  color: white;
  border-color: rgb(var(--primary));
}

.btn-primary:hover {
  background-color: rgb(var(--primary) / 0.9);
  border-color: rgb(var(--primary) / 0.9);
}

.btn-ghost {
  background-color: transparent;
  border-color: transparent;
}

.btn-ghost:hover {
  background-color: rgb(var(--panel));
  border-color: rgb(var(--ring));
}

.btn-lg {
  @apply px-6 py-3 text-base;
}

.btn-sm {
  @apply px-3 py-1.5 text-xs;
}

/* Gradient text utilities */
.gradient-text {
  @apply bg-gradient-to-r from-blue-600 via-purple-600 to-cyan-600 bg-clip-text text-transparent;
}

/* Background utilities */
.bg-stars {
  background-image: 
    radial-gradient(2px 2px at 20px 30px, #eee, transparent),
    radial-gradient(2px 2px at 40px 70px, rgba(255,255,255,0.8), transparent),
    radial-gradient(1px 1px at 90px 40px, #fff, transparent),
    radial-gradient(1px 1px at 130px 80px, rgba(255,255,255,0.6), transparent),
    radial-gradient(2px 2px at 160px 30px, #ddd, transparent);
  background-repeat: repeat;
  background-size: 200px 100px;
  animation: twinkle 4s ease-in-out infinite;
}

.bg-hero-gradient {
  background: linear-gradient(135deg, rgb(15 23 42) 0%, rgb(30 58 138) 50%, rgb(88 28 135) 100%);
}

.bg-glow-radial {
  background: radial-gradient(circle at 50% 0%, rgba(59, 130, 246, 0.15) 0%, transparent 70%);
}

/* Animations */
@keyframes twinkle {
  0%, 100% { opacity: 0.3; }
  50% { opacity: 1; }
}

@keyframes float {
  0%, 100% { transform: translateY(0px); }
  50% { transform: translateY(-20px); }
}

@keyframes blob {
  0% { transform: translate(0) scale(1); }
  33% { transform: translate(30px, -50px) scale(1.1); }
  66% { transform: translate(-20px, 20px) scale(0.9); }
  100% { transform: translate(0) scale(1); }
}

.float {
  animation: float 6s ease-in-out infinite;
}

.animate-blob {
  animation: blob 7s infinite;
}

.animation-delay-2000 {
  animation-delay: 2s;
}

.animation-delay-4000 {
  animation-delay: 4s;
}

/* Glow effects */
.glow {
  box-shadow: 0 0 20px rgba(59, 130, 246, 0.3);
}

.glow-hover:hover {
  box-shadow: 0 0 30px rgba(59, 130, 246, 0.5);
}

/* Utility classes */
.rounded-xl2 {
  border-radius: 1rem;
}

/* Fix appearance property compatibility */
button, input, select, textarea {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

/* Container */
.container {
  @apply mx-auto px-4;
  max-width: 1200px;
}

@media (min-width: 640px) {
  .container {
    @apply px-6;
  }
}

@media (min-width: 1024px) {
  .container {
    @apply px-8;
  }
}


================================================================================
END OF FILE: D:\qiportal-dev\qiportal-client\src\index.css
================================================================================


================================================================================
FILE: D:\qiportal-dev\qiportal-client\src\main.jsx
TYPE: .jsx
================================================================================

import React from 'react'
import ReactDOM from 'react-dom/client'
import { BrowserRouter } from 'react-router-dom'
import App from './App.jsx'
import './index.css'
import { UserProvider } from './context/UserContext'

ReactDOM.createRoot(document.getElementById('root')).render(
  <React.StrictMode>
    <UserProvider>
      <BrowserRouter>
        <App />
      </BrowserRouter>
    </UserProvider>
  </React.StrictMode>
)


================================================================================
END OF FILE: D:\qiportal-dev\qiportal-client\src\main.jsx
================================================================================


================================================================================
FILE: D:\qiportal-dev\qiportal-client\src\components\DocLayout.jsx
TYPE: .jsx
================================================================================

export default function DocLayout({ sidebar, children }) {
  return (
    <div className="container py-16">
      <div className="grid lg:grid-cols-[300px_1fr] gap-8">
        <aside className="lg:sticky lg:top-8 lg:h-fit">
          <nav className="glass p-4 rounded-xl2">
            {sidebar}
          </nav>
        </aside>
        <main className="prose prose-slate max-w-none">
          <div className="space-y-8">
            {children}
          </div>
        </main>
      </div>
    </div>
  );
}
  

================================================================================
END OF FILE: D:\qiportal-dev\qiportal-client\src\components\DocLayout.jsx
================================================================================


================================================================================
FILE: D:\qiportal-dev\qiportal-client\src\components\Header.jsx
TYPE: .jsx
================================================================================

import { Link } from "react-router-dom";
import { useUser } from "../context/UserContext";

/**
 * Header component with navigation and user authentication status
 * @returns {JSX.Element} Header component with navigation links and user info
 */
export default function Header() {
  const { email, role } = useUser();

  return (
    <header className="w-full border-b border-gray-200 bg-white/80 backdrop-blur">
      <div className="mx-auto max-w-6xl px-4 h-16 flex items-center justify-between">
        {/* Brand */}
        <Link to="/" className="flex items-center gap-2">
          <img src="/logo.svg" alt="QiAlly" className="h-7 w-7" />
          <span className="font-semibold">QiAlly</span>
        </Link>

        {/* Nav */}
        <nav className="flex items-center gap-6 text-sm">
          <Link to="/" className="text-gray-600 hover:text-gray-900 transition-colors">
            Home
          </Link>
          {email && (
            <>
              <Link to="/client" className="text-gray-600 hover:text-gray-900 transition-colors">
                Dashboard
              </Link>
              {role === "admin" && (
                <Link to="/admin" className="text-gray-600 hover:text-gray-900 transition-colors">
                  Admin
                </Link>
              )}
            </>
          )}
        </nav>

        {/* User */}
        <div className="flex items-center gap-3">
          {email ? (
            <>
              <div className="flex items-center gap-2">
                <div className="w-6 h-6 rounded-full bg-gradient-to-br from-blue-500 to-purple-500 grid place-items-center">
                  <svg className="w-3 h-3 text-white" viewBox="0 0 20 20" fill="currentColor">
                    <path
                      fillRule="evenodd"
                      d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z"
                      clipRule="evenodd"
                    />
                  </svg>
                </div>
                <div className="text-xs">
                  <p className="font-medium leading-tight">{email}</p>
                  <p className="text-gray-500 capitalize leading-tight">{role}</p>
                </div>
              </div>
              <Link
                to="/logout"
                className="inline-flex items-center rounded-lg px-3 py-2 text-sm bg-gray-900 text-white hover:opacity-90"
              >
                Logout
              </Link>
            </>
          ) : (
            <a
              href="https://portal.qially.com/client"
              className="inline-flex items-center rounded-lg px-3 py-2 text-sm bg-gradient-to-r from-blue-600 to-purple-600 text-white hover:opacity-90"
            >
              Sign In
            </a>
          )}
        </div>
      </div>
    </header>
  );
}


================================================================================
END OF FILE: D:\qiportal-dev\qiportal-client\src\components\Header.jsx
================================================================================


================================================================================
FILE: D:\qiportal-dev\qiportal-client\src\components\Hero.jsx
TYPE: .jsx
================================================================================

export default function Hero() {
  return (
    <section className="relative overflow-hidden isolate min-h-[70vh] flex items-center" data-theme="dark">
      <div className="absolute inset-0 bg-hero-gradient bg-stars" />
      <div className="absolute inset-x-0 top-0 h-1/2 bg-glow-radial pointer-events-none" />
      <div className="container relative z-10 grid md:grid-cols-2 gap-10 py-16">
        <div className="text-left max-w-xl">
          <p className="text-subtext mb-4">QiAlly • Consulting + Client Portal</p>
          <h1 className="font-display text-4xl md:text-6xl leading-tight">
            Practical growth systems <span className="gradient-text">for small teams</span>
          </h1>
          <p className="mt-5 text-lg text-subtext">
            Strategy, ops, and clean execution. We set up tools, workflows, and dashboards so your
            business actually runs.
          </p>
          <ul className="mt-6 grid gap-2 text-sm text-subtext">
            <li>• Fractional ops & systems setup</li>
            <li>• Client portals, tickets, and automations</li>
            <li>• Analytics, receipts, and finance hygiene</li>
          </ul>
          <div className="mt-8 flex flex-wrap items-center gap-3">
            <a className="btn btn-primary" href="#contact">Work with us</a>
            <a className="btn btn-ghost" href="https://portal.qially.com/client">Client login</a>
          </div>
        </div>
        <div className="glass p-4 md:p-6 rounded-xl2">
          <div className="aspect-[16/10] rounded-xl2 bg-black/40 grid place-items-center text-white/60">
            <span>Portal dashboard preview</span>
          </div>
        </div>
      </div>
    </section>
  );
}


================================================================================
END OF FILE: D:\qiportal-dev\qiportal-client\src\components\Hero.jsx
================================================================================


================================================================================
FILE: D:\qiportal-dev\qiportal-client\src\components\ProtectedRoute.jsx
TYPE: .jsx
================================================================================

import { Navigate } from "react-router-dom";
import { useUser } from "../context/UserContext";

export default function ProtectedRoute({ roleRequired, children }) {
  const { role, hydrated } = useUser();
  if (!hydrated) return null;
  if (roleRequired && role !== roleRequired) return <Navigate to="/" replace />;
  return children;
}

================================================================================
END OF FILE: D:\qiportal-dev\qiportal-client\src\components\ProtectedRoute.jsx
================================================================================


================================================================================
FILE: D:\qiportal-dev\qiportal-client\src\components\SiteHeader.jsx
TYPE: .jsx
================================================================================

export default function SiteHeader() {
    return (
      <header className="container py-4 flex items-center justify-between">
        <a href="/" className="font-semibold">QiAlly</a>
        <nav className="hidden md:flex items-center gap-6 text-sm">
          <a href="#what-we-do">Services</a>
          <a href="#outcomes">Outcomes</a>
          <a href="#contact">Contact</a>
          <a className="btn btn-ghost" href="https://portal.qially.com/client">Login</a>
        </nav>
      </header>
    );
  }
  

================================================================================
END OF FILE: D:\qiportal-dev\qiportal-client\src\components\SiteHeader.jsx
================================================================================


================================================================================
FILE: D:\qiportal-dev\qiportal-client\src\components\ThemeProvider.jsx
TYPE: .jsx
================================================================================

import { createContext, useContext, useEffect, useState } from 'react';

const ThemeContext = createContext();

export function useTheme() {
  const context = useContext(ThemeContext);
  if (!context) {
    throw new Error('useTheme must be used within a ThemeProvider');
  }
  return context;
}

export default function ThemeProvider({ children, defaultTheme = 'light' }) {
  const [theme, setTheme] = useState(defaultTheme);

  useEffect(() => {
    const root = document.documentElement;
    root.setAttribute('data-theme', theme);
  }, [theme]);

  const toggleTheme = () => {
    setTheme(prev => prev === 'light' ? 'dark' : 'light');
  };

  return (
    <ThemeContext.Provider value={{ theme, setTheme, toggleTheme }}>
      {children}
    </ThemeContext.Provider>
  );
}


================================================================================
END OF FILE: D:\qiportal-dev\qiportal-client\src\components\ThemeProvider.jsx
================================================================================


================================================================================
FILE: D:\qiportal-dev\qiportal-client\src\components\ThemeToggle.jsx
TYPE: .jsx
================================================================================

import { useTheme } from './ThemeProvider';

export default function ThemeToggle() {
  const { theme, toggleTheme } = useTheme();

  return (
    <button
      onClick={toggleTheme}
      className="btn btn-ghost btn-sm"
      aria-label={`Switch to ${theme === 'light' ? 'dark' : 'light'} theme`}
    >
      {theme === 'light' ? (
        <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" />
        </svg>
      ) : (
        <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z" />
        </svg>
      )}
    </button>
  );
}


================================================================================
END OF FILE: D:\qiportal-dev\qiportal-client\src\components\ThemeToggle.jsx
================================================================================


================================================================================
FILE: D:\qiportal-dev\qiportal-client\src\context\UserContext.jsx
TYPE: .jsx
================================================================================

import React, { createContext, useContext, useEffect, useState } from "react";

const UserContext = createContext();

export const UserProvider = ({ children }) => {
  const [email, setEmail] = useState(null);
  const [role, setRole] = useState("guest");
  const [hydrated, setHydrated] = useState(false);

  const applyRole = (userEmail) => {
    const admins = ["admin@qially.me", "crice4485@gmail.com"];
    const clients = ["info@qially.me", "client1@email.com"];
    if (admins.includes(userEmail)) return "admin";
    if (clients.includes(userEmail)) return "client";
    return "guest";
  };

  const hydrate = async () => {
    try {
      const res = await fetch("/api/me", { credentials: "include" });
      if (!res.ok) return;
      const data = await res.json();
      if (data?.email) {
        setEmail(data.email);
        setRole(applyRole(data.email));
      }
    } catch {
      // stay guest
    } finally {
      setHydrated(true);
    }
  };

  useEffect(() => { hydrate(); }, []);

  return (
    <UserContext.Provider value={{ email, role, hydrated, setEmail, setRole }}>
      {children}
    </UserContext.Provider>
  );
};

export const useUser = () => useContext(UserContext);
export { UserContext };


================================================================================
END OF FILE: D:\qiportal-dev\qiportal-client\src\context\UserContext.jsx
================================================================================


================================================================================
FILE: D:\qiportal-dev\qiportal-client\src\lib\api.js
TYPE: .js
================================================================================

/**
 * API utility function with error handling and authentication redirects
 * @param {string} path - API endpoint path
 * @param {Object} opts - Fetch options
 * @returns {Promise<Object>} API response or error object
 */
export async function api(path, opts = {}) {
  let res;
  try {
    res = await fetch(path, { credentials: "include", ...opts });
  } catch (err) {
    // Network or CORS error: surface a sane shape
    return { error: true, message: "Network error", detail: String(err) };
  }

  if (res.status === 401) {
    window.location.href = "/logout";
    return;
  }

  // Try JSON; if it fails, fall back to text.
  const text = await res.text();
  try {
    return JSON.parse(text);
  } catch {
    return { error: true, message: "Invalid JSON", body: text };
  }
}


================================================================================
END OF FILE: D:\qiportal-dev\qiportal-client\src\lib\api.js
================================================================================


================================================================================
FILE: D:\qiportal-dev\qiportal-client\src\pages\AdminPanel.jsx
TYPE: .jsx
================================================================================

import { useUser } from '../context/UserContext'

const AdminPanel = () => {
  const { email, role } = useUser()

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 p-6">
      <div className="max-w-7xl mx-auto">
        {/* Header */}
        <div className="mb-8">
          <h1 className="text-3xl font-bold gradient-text mb-2">Admin Panel</h1>
          <p className="text-subtext">Welcome back, {email}</p>
        </div>

        {/* Stats Cards */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
          <div className="glass p-6 rounded-xl2">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-subtext text-sm">Total Users</p>
                <p className="text-3xl font-bold text-white">156</p>
              </div>
              <div className="w-12 h-12 bg-blue-500/20 rounded-xl flex items-center justify-center">
                <svg className="w-6 h-6 text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z" />
                </svg>
              </div>
            </div>
          </div>

          <div className="glass p-6 rounded-xl2">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-subtext text-sm">Active Sessions</p>
                <p className="text-3xl font-bold text-white">23</p>
              </div>
              <div className="w-12 h-12 bg-green-500/20 rounded-xl flex items-center justify-center">
                <svg className="w-6 h-6 text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
              </div>
            </div>
          </div>

          <div className="glass p-6 rounded-xl2">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-subtext text-sm">System Status</p>
                <p className="text-3xl font-bold text-green-400">Online</p>
              </div>
              <div className="w-12 h-12 bg-green-500/20 rounded-xl flex items-center justify-center">
                <svg className="w-6 h-6 text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                </svg>
              </div>
            </div>
          </div>
        </div>

        {/* Quick Actions */}
        <div className="glass p-6 rounded-xl2 mb-8">
          <h2 className="text-xl font-semibold text-white mb-4">Quick Actions</h2>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
            <button className="btn btn-primary">Add User</button>
            <button className="btn btn-ghost">View Logs</button>
            <button className="btn btn-ghost">System Settings</button>
            <button className="btn btn-ghost">Backup Data</button>
          </div>
        </div>

        {/* Recent Activity */}
        <div className="glass p-6 rounded-xl2">
          <h2 className="text-xl font-semibold text-white mb-4">System Activity</h2>
          <div className="space-y-4">
            <div className="flex items-center space-x-4 p-4 bg-white/5 rounded-xl">
              <div className="w-10 h-10 bg-blue-500/20 rounded-full flex items-center justify-center">
                <svg className="w-5 h-5 text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                </svg>
              </div>
              <div className="flex-1">
                <p className="font-medium text-white">New user registered</p>
                <p className="text-sm text-subtext">john.doe@example.com joined the platform</p>
              </div>
              <span className="text-sm text-subtext">5 minutes ago</span>
            </div>

            <div className="flex items-center space-x-4 p-4 bg-white/5 rounded-xl">
              <div className="w-10 h-10 bg-yellow-500/20 rounded-full flex items-center justify-center">
                <svg className="w-5 h-5 text-yellow-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z" />
                </svg>
              </div>
              <div className="flex-1">
                <p className="font-medium text-white">System warning</p>
                <p className="text-sm text-subtext">High memory usage detected</p>
              </div>
              <span className="text-sm text-subtext">1 hour ago</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}

export default AdminPanel


================================================================================
END OF FILE: D:\qiportal-dev\qiportal-client\src\pages\AdminPanel.jsx
================================================================================


================================================================================
FILE: D:\qiportal-dev\qiportal-client\src\pages\ClientDash.jsx
TYPE: .jsx
================================================================================

// src/pages/ClientDash.jsx
import { useEffect, useState } from "react";
import { api } from "../lib/api";

export default function ClientDash() {
  const [me, setMe] = useState(null);
  const [err, setErr] = useState(null);

  useEffect(() => {
    let alive = true;
    (async () => {
      try {
        const data = await api("/api/me");
        if (alive) setMe(data);
      } catch (e) {
        if (alive) setErr("Could not load profile.");
      }
    })();
    return () => { alive = false; };
  }, []);

  return (
    <div className="p-6">
      <h1 className="text-xl font-semibold">Client Dashboard</h1>
      {err && <p className="mt-2 text-red-600">{err}</p>}
      <p className="mt-2 opacity-80">Signed in as: {me?.email ?? "…"}</p>
      <button className="mt-4 underline" onClick={() => (window.location.href = "/logout")}>
        Logout
      </button>
    </div>
  );
}


================================================================================
END OF FILE: D:\qiportal-dev\qiportal-client\src\pages\ClientDash.jsx
================================================================================


================================================================================
FILE: D:\qiportal-dev\qiportal-client\src\pages\Dashboard.jsx
TYPE: .jsx
================================================================================

import { useUser } from '../context/UserContext'

const Dashboard = () => {
  const { email, role } = useUser()

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 p-6">
      <div className="max-w-7xl mx-auto">
        {/* Header */}
        <div className="mb-8">
          <h1 className="text-3xl font-bold gradient-text mb-2">Client Dashboard</h1>
          <p className="text-subtext">Welcome back, {email}</p>
        </div>

        {/* Stats Cards */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
          <div className="glass p-6 rounded-xl2">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-subtext text-sm">Active Projects</p>
                <p className="text-3xl font-bold text-white">3</p>
              </div>
              <div className="w-12 h-12 bg-blue-500/20 rounded-xl flex items-center justify-center">
                <svg className="w-6 h-6 text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                </svg>
              </div>
            </div>
          </div>

          <div className="glass p-6 rounded-xl2">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-subtext text-sm">Pending Tasks</p>
                <p className="text-3xl font-bold text-white">12</p>
              </div>
              <div className="w-12 h-12 bg-yellow-500/20 rounded-xl flex items-center justify-center">
                <svg className="w-6 h-6 text-yellow-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
              </div>
            </div>
          </div>

          <div className="glass p-6 rounded-xl2">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-subtext text-sm">Completed</p>
                <p className="text-3xl font-bold text-white">28</p>
              </div>
              <div className="w-12 h-12 bg-green-500/20 rounded-xl flex items-center justify-center">
                <svg className="w-6 h-6 text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
              </div>
            </div>
          </div>
        </div>

        {/* Recent Activity */}
        <div className="glass p-6 rounded-xl2">
          <h2 className="text-xl font-semibold text-white mb-4">Recent Activity</h2>
          <div className="space-y-4">
            <div className="flex items-center space-x-4 p-4 bg-white/5 rounded-xl">
              <div className="w-10 h-10 bg-blue-500/20 rounded-full flex items-center justify-center">
                <svg className="w-5 h-5 text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                </svg>
              </div>
              <div className="flex-1">
                <p className="font-medium text-white">New project created</p>
                <p className="text-sm text-subtext">Website redesign project started</p>
              </div>
              <span className="text-sm text-subtext">2 hours ago</span>
            </div>

            <div className="flex items-center space-x-4 p-4 bg-white/5 rounded-xl">
              <div className="w-10 h-10 bg-green-500/20 rounded-full flex items-center justify-center">
                <svg className="w-5 h-5 text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
              </div>
              <div className="flex-1">
                <p className="font-medium text-white">Task completed</p>
                <p className="text-sm text-subtext">Homepage mockup approved</p>
              </div>
              <span className="text-sm text-subtext">1 day ago</span>
            </div>

            <div className="flex items-center space-x-4 p-4 bg-white/5 rounded-xl">
              <div className="w-10 h-10 bg-yellow-500/20 rounded-full flex items-center justify-center">
                <svg className="w-5 h-5 text-yellow-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 17h5l-5 5v-5z" />
                </svg>
              </div>
              <div className="flex-1">
                <p className="font-medium text-white">Feedback received</p>
                <p className="text-sm text-subtext">New comments on design proposal</p>
              </div>
              <span className="text-sm text-subtext">3 days ago</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}

export default Dashboard


================================================================================
END OF FILE: D:\qiportal-dev\qiportal-client\src\pages\Dashboard.jsx
================================================================================


================================================================================
FILE: D:\qiportal-dev\qiportal-client\src\pages\Home.jsx
TYPE: .jsx
================================================================================

import { useRef } from 'react'
import { Link } from 'react-router-dom'

function Home() {
  const aboutRef = useRef(null);
  const whatWeOfferRef = useRef(null);
  const caseStudiesRef = useRef(null);
  const testimonialRef = useRef(null);
  const portalRef = useRef(null);

  const whatWeOffer = {
    services: ['Management & Operations', 'Process Improvement', 'HR & Workforce Optimization', 'Financial Acumen', 'Technology & Systems Integration'],
    industries: ['Healthcare', 'E-commerce & Retail', 'Service-Based Businesses', 'Manufacturing'],
    expertise: ['Strategic Planning', 'Business Process Re-engineering', 'Change Management', 'Data Analysis & Reporting']
  };

  const achievements = [
    { number: '500+', text: 'Clients & Partners' },
    { number: '20+', text: 'Years Experience' },
    { number: '80+', text: 'Solutions & Processes' },
  ];

  const caseStudies = [
    { id: 1, title: 'Operational Workflow Overhaul', summary: 'Integrated finance and tech workflows, cutting process time by 40%.' },
    { id: 2, title: 'HR Tech Implementation', summary: 'Deployed an HRIS that boosted onboarding efficiency by 60%.' },
    { id: 3, title: 'Reporting Automation', summary: 'Automated financial reports, saving 200 man-hours per quarter.' },
    { id: 4, title: 'Process Mapping & Optimization', summary: 'Uncovered $250K in annual savings through comprehensive mapping.' },
  ];

  const testimonial = {
    quote: "Cody is the best, Cody didn't just get the job done, they found and corrected other issues along the way proactively. Huge savings and potential from the start.",
    author: "Nick Pecoraro, Director at MSIL"
  };

  return (
    <div className="min-h-screen relative overflow-hidden bg-white">
      {/* Background effects */}
      <div className="absolute inset-0 overflow-hidden">
        <div className="absolute top-20 left-20 w-72 h-72 bg-blue-500/5 rounded-full mix-blend-multiply filter blur-xl opacity-30 animate-blob"></div>
        <div className="absolute top-40 right-20 w-72 h-72 bg-purple-500/5 rounded-full mix-blend-multiply filter blur-xl opacity-30 animate-blob animation-delay-2000"></div>
        <div className="absolute -bottom-8 left-40 w-72 h-72 bg-cyan-500/5 rounded-full mix-blend-multiply filter blur-xl opacity-30 animate-blob animation-delay-4000"></div>
      </div>

      {/* Hero Section with QiAlly Branding */}
      <section className="relative z-10 min-h-screen flex items-center justify-center px-4">
        <div className="container mx-auto text-center">
          <div className="max-w-4xl mx-auto">
            {/* Logo */}
            <div className="w-24 h-24 bg-gradient-to-br from-blue-500 to-purple-500 rounded-xl2 flex items-center justify-center mx-auto mb-8 p-4">
              <img src="/logo.svg" alt="QiAlly Logo" className="w-full h-full object-contain" />
            </div>
            
            {/* Main Headline */}
            <h1 className="text-5xl md:text-7xl font-bold mb-6">
              <span className="gradient-text">QiAlly™</span>
            </h1>
            
            {/* Tagline */}
            <p className="text-2xl md:text-3xl text-gray-700 mb-4 font-light">
              Systems That Breathe
            </p>
            
            {/* Short line */}
            <p className="text-lg text-gray-600 mb-12 max-w-2xl mx-auto">
              The QiSuite™ Portal is live. The full site launches soon.
            </p>
            
            {/* CTA Buttons */}
            <div className="flex flex-col sm:flex-row gap-4 justify-center items-center mb-16">
              <a 
                href="https://portal.qially.com/client" 
                className="btn btn-primary btn-lg px-8"
              >
                Access Portal
              </a>
              <a 
                href="mailto:info@qially.me" 
                className="btn btn-ghost btn-lg px-8"
              >
                Join the Waitlist
              </a>
            </div>
            
            {/* Trust Indicators */}
            <div className="flex justify-center items-center space-x-8">
              <div className="flex items-center space-x-2 text-gray-500">
                <div className="w-3 h-3 bg-blue-500 rounded-full"></div>
                <span className="text-sm">Secure</span>
              </div>
              <div className="flex items-center space-x-2 text-gray-500">
                <div className="w-3 h-3 bg-purple-500 rounded-full"></div>
                <span className="text-sm">Fast</span>
              </div>
              <div className="flex items-center space-x-2 text-gray-500">
                <div className="w-3 h-3 bg-cyan-500 rounded-full"></div>
                <span className="text-sm">Reliable</span>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* About Section */}
      <section ref={aboutRef} className="relative z-10 py-20 px-4">
        <div className="container mx-auto">
          <div className="max-w-4xl mx-auto text-center">
            <h2 className="text-4xl md:text-5xl font-bold mb-8 gradient-text">About QiAlly</h2>
            <p className="text-xl text-gray-700 mb-8 leading-relaxed">
              We transform chaos into clarity. Through modular systems, client portals, and operational revival, 
              we help businesses breathe easier and operate more efficiently.
            </p>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-8 mt-12">
              {achievements.map((achievement, index) => (
                <div key={index} className="glass p-6 rounded-xl2">
                  <div className="text-3xl font-bold gradient-text mb-2">{achievement.number}</div>
                  <div className="text-gray-600">{achievement.text}</div>
                </div>
              ))}
            </div>
          </div>
        </div>
      </section>

      {/* What We Offer Section */}
      <section ref={whatWeOfferRef} className="relative z-10 py-20 px-4 bg-gray-50">
        <div className="container mx-auto">
          <div className="max-w-6xl mx-auto">
            <h2 className="text-4xl md:text-5xl font-bold mb-12 text-center gradient-text">What We Offer</h2>
            
            <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
              {/* Services */}
              <div className="glass p-8 rounded-xl2">
                <h3 className="text-2xl font-bold mb-6 text-gray-800">Services</h3>
                <ul className="space-y-3">
                  {whatWeOffer.services.map((service, index) => (
                    <li key={index} className="flex items-center space-x-3">
                      <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                      <span className="text-gray-700">{service}</span>
                    </li>
                  ))}
                </ul>
              </div>
              
              {/* Industries */}
              <div className="glass p-8 rounded-xl2">
                <h3 className="text-2xl font-bold mb-6 text-gray-800">Industries</h3>
                <ul className="space-y-3">
                  {whatWeOffer.industries.map((industry, index) => (
                    <li key={index} className="flex items-center space-x-3">
                      <div className="w-2 h-2 bg-purple-500 rounded-full"></div>
                      <span className="text-gray-700">{industry}</span>
                    </li>
                  ))}
                </ul>
              </div>
              
              {/* Expertise */}
              <div className="glass p-8 rounded-xl2">
                <h3 className="text-2xl font-bold mb-6 text-gray-800">Expertise</h3>
                <ul className="space-y-3">
                  {whatWeOffer.expertise.map((expertise, index) => (
                    <li key={index} className="flex items-center space-x-3">
                      <div className="w-2 h-2 bg-cyan-500 rounded-full"></div>
                      <span className="text-gray-700">{expertise}</span>
                    </li>
                  ))}
                </ul>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Case Studies Section */}
      <section ref={caseStudiesRef} className="relative z-10 py-20 px-4">
        <div className="container mx-auto">
          <div className="max-w-6xl mx-auto">
            <h2 className="text-4xl md:text-5xl font-bold mb-12 text-center gradient-text">Case Studies</h2>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
              {caseStudies.map((study) => (
                <div key={study.id} className="glass p-8 rounded-xl2 hover:shadow-xl transition-all duration-300">
                  <h3 className="text-xl font-bold mb-4 text-gray-800">{study.title}</h3>
                  <p className="text-gray-600">{study.summary}</p>
                </div>
              ))}
            </div>
          </div>
        </div>
      </section>

      {/* Testimonial Section */}
      <section ref={testimonialRef} className="relative z-10 py-20 px-4 bg-gray-50">
        <div className="container mx-auto">
          <div className="max-w-4xl mx-auto text-center">
            <div className="glass p-12 rounded-xl2">
              <blockquote className="text-2xl md:text-3xl text-gray-700 mb-6 italic">
                "{testimonial.quote}"
              </blockquote>
              <cite className="text-lg text-gray-600 font-semibold">
                — {testimonial.author}
              </cite>
            </div>
          </div>
        </div>
      </section>

      {/* Contact Section */}
      <section ref={portalRef} className="relative z-10 py-20 px-4">
        <div className="container mx-auto">
          <div className="max-w-4xl mx-auto text-center">
            <h2 className="text-4xl md:text-5xl font-bold mb-8 gradient-text">Ready to Get Started?</h2>
            <p className="text-xl text-gray-700 mb-12">
              Access your portal or get in touch to learn how we can help transform your operations.
            </p>
            <div className="flex flex-col sm:flex-row gap-4 justify-center items-center">
              <a 
                href="https://portal.qially.com/client" 
                className="btn btn-primary btn-lg px-8"
              >
                Access Portal
              </a>
              <a 
                href="mailto:info@qially.me" 
                className="btn btn-ghost btn-lg px-8"
              >
                Contact Us
              </a>
            </div>
          </div>
        </div>
      </section>
    </div>
  )
}

export default Home


================================================================================
END OF FILE: D:\qiportal-dev\qiportal-client\src\pages\Home.jsx
================================================================================


================================================================================
FILE: D:\qiportal-dev\qiportal-client\src\pages\Logout.jsx
TYPE: .jsx
================================================================================

// src/pages/Logout.jsx
export default function Logout() {
  const team = "qially";
  const ret = encodeURIComponent("https://portal.qially.com");
  window.location.href = `https://${team}.cloudflareaccess.com/cdn-cgi/access/logout?returnTo=${ret}`;
  return null;
}


================================================================================
END OF FILE: D:\qiportal-dev\qiportal-client\src\pages\Logout.jsx
================================================================================


================================================================================
FILE: D:\qiportal-dev\qiportal-client\src\pages\NotFound.jsx
TYPE: .jsx
================================================================================

import { Link } from 'react-router-dom'

function NotFound() {
  return (
    <div className="min-h-screen flex items-center justify-center p-4 bg-white">
      {/* Background effects */}
      <div className="absolute inset-0 overflow-hidden">
        <div className="absolute top-20 left-20 w-72 h-72 bg-blue-500/10 rounded-full mix-blend-multiply filter blur-xl opacity-30 animate-blob"></div>
        <div className="absolute top-40 right-20 w-72 h-72 bg-purple-500/10 rounded-full mix-blend-multiply filter blur-xl opacity-30 animate-blob animation-delay-2000"></div>
        <div className="absolute -bottom-8 left-40 w-72 h-72 bg-cyan-500/10 rounded-full mix-blend-multiply filter blur-xl opacity-30 animate-blob animation-delay-4000"></div>
      </div>

      <div className="relative z-10 text-center">
        <div className="w-24 h-24 bg-gradient-to-br from-blue-500 to-purple-500 rounded-xl2 flex items-center justify-center mx-auto mb-6 glow">
          <span className="text-white text-3xl font-bold">404</span>
        </div>

        <h1 className="text-4xl md:text-6xl font-bold gradient-text mb-4">Page Not Found</h1>
        <p className="text-lg text-subtext mb-8 max-w-md mx-auto">
          The page you're looking for doesn't exist or has been moved.
        </p>

        <Link
          to="/"
          className="inline-flex items-center px-6 py-3 bg-gradient-to-r from-blue-600 to-purple-600 text-white font-semibold rounded-xl2 shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-300 glow-hover"
        >
          <svg className="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
          </svg>
          Go Home
        </Link>
      </div>
    </div>
  )
}

export default NotFound


================================================================================
END OF FILE: D:\qiportal-dev\qiportal-client\src\pages\NotFound.jsx
================================================================================


================================================================================
FILE: D:\qiportal-dev\qiportal-client\src\utils\auth.js
TYPE: .js
================================================================================

// src/utils/auth.js
// Deprecated. Do not parse Access cookies client-side.
// Keep a stub so imports don't explode.
export function getUserEmailFromJWT() {
  return null;
}


================================================================================
END OF FILE: D:\qiportal-dev\qiportal-client\src\utils\auth.js
================================================================================


================================================================================
EXTRACTION COMPLETE
Total files processed: 32
Output saved to: D:\qiportal-dev\qiportal-client\code_extraction_2025-08-23_06-22-36.txt
================================================================================
